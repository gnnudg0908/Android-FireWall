apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.soap.networkmaster"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 101
        versionName "1.01"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            //对应framework.jar路径
            options.compilerArgs.add('-Xbootclasspath/p:libs/frameworks.jar')
        }
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly files('libs/frameworks.jar')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

preBuild {
    doLast {
        println 'Change ' + project.name + '.iml libraries order...'
        try {
            def imlFile = file(project.name + ".iml");
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            def type = jdkNode.attribute("type")
            def jdkName = jdkNode.attribute("jdkName")
            def jdkType = jdkNode.attribute("jdkType")
            parsedXml.component[1].remove(jdkNode)
            new Node(parsedXml.component[1], 'orderEntry', ['type': type, 'jdkName': jdkName, 'jdkType': jdkType])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            println("FileNotFoundException!")
        }
    }
}